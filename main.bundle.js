(()=>{"use strict";const e={element:document.querySelector("#game-board"),height:400,width:900},t={element:document.getElementById("castle"),height:400,width:200,health:null},s=class{constructor(e,t){this.element=document.createElement("div"),this.pos={x:e,y:t},this.width=50,this.height=50,this.speed=1,this.selected=!1,this.question="",this.answer="",this.element.classList.add("enemy"),this.element.style.width=`${this.width}px`,this.element.style.height=`${this.height}px`}update(e){this.hasHitCastle(e)?this.delete(e):this.pos.x+=this.speed}draw(){this.element.style.transform=`translate(${this.pos.x}px, ${this.pos.y}px)`}delete(e){this.element.remove(),e.deleteEnemy(this)}hasHitCastle(e){return this.pos.x>=e.fieldWidth-this.width}};(new class{constructor(){this.gameBoard=e,this.castle=t,this.fieldWidth=e.width-t.width,this.enemies=[],this.gameLoop=this.gameLoop.bind(this)}start(){this.spawnEnemy(),requestAnimationFrame(this.gameLoop)}gameLoop(){this.update(),this.draw(),requestAnimationFrame(this.gameLoop)}update(){this.enemies.forEach((e=>e.update(this)))}draw(){this.enemies.forEach((e=>e.draw()))}spawnEnemy(){const e=[62.5,175,287.5],t=this.gameBoard.element;for(let t=0;t<3;t+=1){const i=new s(0,e[t]);this.enemies.push(i)}this.enemies.forEach((e=>{t.appendChild(e.element),e.draw()}))}deleteEnemy(e){this.enemies=this.enemies.filter((t=>t!==e))}}).start()})();
//# sourceMappingURL=main.bundle.js.map