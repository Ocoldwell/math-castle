{"version":3,"sources":["webpack://castle-game/webpack/bootstrap","webpack://castle-game/webpack/runtime/global","webpack://castle-game/webpack/runtime/publicPath","webpack://castle-game/./src/modules/gameBoard.js","webpack://castle-game/./src/modules/castle.js","webpack://castle-game/./src/modules/createEnemySpriteSheet.js","webpack://castle-game/./src/modules/enemy.js","webpack://castle-game/./src/modules/timer.js","webpack://castle-game/./src/modules/questionGenerator.js","webpack://castle-game/./src/modules/scoreHandler.js","webpack://castle-game/./src/modules/defaultSettings.js","webpack://castle-game/./src/modules/domUtils.js","webpack://castle-game/./src/modules/engine.js","webpack://castle-game/./src/modules/game.js","webpack://castle-game/./src/index.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","element","querySelector","height","width","lives","elements","container","getElementById","livesText","setup","draw","damage","amount","onGameOver","textContent","Math","max","sprite","Image","enemySpriteSheet","sprite2","enemySpriteSheet2","sprite3","enemySpriteSheet3","spriteSheets","getRandomSpriteSheet","floor","random","getBackgroundSize","position","x","y","speed","question","fieldWidth","handleSelectEnemy","damageCastle","deleteEnemy","timeSinceLastFrame","frameX","frameWidth","spriteSheetWidth","frameHeight","spriteSheetHeight","getBackgroundPosition","update","deltaTime","enemyElement","createElement","questionElement","classList","add","style","text","backgroundImage","backgroundPosition","backgroundSize","appendChild","addEventListener","handleDelete","remove","Object","freeze","transform","toggleSelect","toggle","duration","onFinish","autoRestart","timeRemaining","tick","getHumanTimeRemaining","seconds","ceil","minutes","operatorDifficulty","easy","medium","hard","insane","wholeNumberGenerator","number","questionNumberGenerator","difficulty","generateDifficulty","operator","indexOperatorGenerator","operatorSelector","number1","number2","questionText","answer","questionArr","split","num1","Number","num2","answerQuestion","scoreElements","querySelectorAll","score","forEach","addPoints","reset","SPAWN_POINTS","FIRST_LANE","SECOND_LANE","THIRD_LANE","POINTS","CORRECT_ANSWER","WRONG_ANSWER","CASTLE_LIFE_LOST","enemySpeed","enemySpeedIncrement","spawnTimerMs","gameTimerMs","questionDifficulty","castleStartingLives","hideElement","display","showElement","displayValue","startPage","gamePage","gameOverPage","difficultySelectPage","answerForm","answerInput","gameTimer","wrongAnswersEl","startButton","restartButton","pauseButton","difficultyButtons","homeButton","settings","timers","constructor","render","running","rafID","accumulatedTime","currentTime","timeStep","cycle","bind","timeStamp","requestAnimationFrame","updated","start","stop","cancelAnimationFrame","gameState","keys","key","enemies","enemy","selectedEnemy","wrongAnswers","spawnEnemy","getRandomSpawnPoint","push","filter","handleAnswerSubmit","event","preventDefault","value","trim","correctAnswer","toString","scoreHandler","focus","clickedEnemy","find","currentTarget","gameOver","spawnTimer","restart","handlePause","first","second","disabled","handleStartButtonClick","handleDifficultySelect","selectedDifficulty","target","dataset","handleHomeButtonClick","init","button"],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const gameBoard = {\n    element: document.querySelector('#game-board'),\n    height: 400,\n    width: 1000,\n};\n\nexport default gameBoard;\n","const castle = {\n    height: 400,\n    width: 137,\n    lives: null,\n    elements: {\n        container: document.getElementById('castle'),\n        livesText: document.getElementById('castle-lives'),\n    },\n\n    setup(lives) {\n        this.lives = lives;\n        this.draw();\n    },\n\n    damage(amount, onGameOver) {\n        this.lives -= amount;\n        this.draw();\n\n        if (this.lives === 0) onGameOver();\n    },\n\n    draw() {\n        this.elements.livesText.textContent = Math.max(0, this.lives);\n    },\n};\n\nexport default castle;\n","import enemySpriteSheet from '../img/enemySpriteSheet.png';\nimport enemySpriteSheet2 from '../img/enemySpriteSheet2.png';\nimport enemySpriteSheet3 from '../img/enemySpriteSheet3.png';\n\nconst sprite = new Image();\nsprite.src = enemySpriteSheet;\n\nconst sprite2 = new Image();\nsprite2.src = enemySpriteSheet2;\n\nconst sprite3 = new Image();\nsprite3.src = enemySpriteSheet3;\n\nconst spriteSheets = [sprite, sprite2, sprite3];\n\nconst scale = 0.2;\nconst spriteSheetWidth = 12060 * scale;\nconst spriteSheetHeight = 490 * scale;\nconst spriteSheetColumns = 18;\nconst spriteSheetRows = 1;\nconst frameWidth = spriteSheetWidth / spriteSheetColumns;\nconst frameHeight = spriteSheetHeight / spriteSheetRows;\nconst frameInterval = 50;\nconst maxFrameX = 17;\nconst frameY = 0;\n\nfunction getRandomSpriteSheet() {\n    return spriteSheets[Math.floor(Math.random() * spriteSheets.length)];\n}\n\nfunction getBackgroundSize() {\n    return `${spriteSheetWidth}px ${spriteSheetHeight}px`;\n}\n\nfunction createEnemySpriteSheet() {\n    let timeSinceLastFrame = 0;\n    let frameX = 0;\n\n    function incFrameX() {\n        if (frameX >= maxFrameX) frameX = 0;\n        else frameX += 1;\n    }\n\n    function getBackgroundPosition() {\n        return `-${frameWidth * frameX}px -${frameHeight * frameY}px`;\n    }\n\n    function update(deltaTime) {\n        timeSinceLastFrame += deltaTime;\n        if (timeSinceLastFrame > frameInterval) {\n            incFrameX();\n            timeSinceLastFrame = 0;\n        }\n    }\n\n    return {\n        sprite: getRandomSpriteSheet(),\n        frameWidth,\n        frameHeight,\n        getRandomSpriteSheet,\n        getBackgroundPosition,\n        getBackgroundSize,\n        update,\n    };\n}\n\nexport default createEnemySpriteSheet;\n","import createEnemySpriteSheet from './createEnemySpriteSheet';\n\nfunction Enemy({\n    position: { x, y },\n    speed,\n    question,\n    fieldWidth,\n    handleSelectEnemy,\n    damageCastle,\n    deleteEnemy,\n} = {}) {\n    const enemySpriteSheet = createEnemySpriteSheet();\n    const width = enemySpriteSheet.frameWidth;\n    const height = enemySpriteSheet.frameHeight;\n    const position = { x, y };\n    const element = createElement();\n\n    // PRIVATE FUNCTIONS\n\n    function createElement() {\n        const enemyElement = document.createElement('div');\n        const questionElement = document.createElement('div');\n\n        // set enemy element styles\n        enemyElement.classList.add('enemy');\n        enemyElement.style.width = `${width}px`;\n        enemyElement.style.height = `${height}px`;\n\n        // set question element styles and text\n        questionElement.classList.add('enemy-question');\n        questionElement.textContent = question.text;\n\n        // sprite styles\n        enemyElement.style.backgroundImage = `url(${enemySpriteSheet.sprite.src})`;\n        enemyElement.style.backgroundPosition =\n            enemySpriteSheet.getBackgroundPosition();\n        enemyElement.style.backgroundSize =\n            enemySpriteSheet.getBackgroundSize();\n\n        enemyElement.appendChild(questionElement);\n\n        enemyElement.addEventListener('click', handleSelectEnemy);\n\n        return enemyElement;\n    }\n\n    function hasHitCastle() {\n        return position.x >= fieldWidth - width / 2;\n    }\n\n    // PUBLIC FUNCTIONS\n\n    function update(deltaTime) {\n        if (hasHitCastle()) {\n            handleDelete();\n            damageCastle(1);\n            return;\n        }\n\n        // multiply speed by deltaTime in seconds\n        // for consistent movement across different framerates\n        position.x += speed * (deltaTime / 1000);\n\n        enemySpriteSheet.update(deltaTime);\n    }\n\n    function draw() {\n        // draw the enemy to different position\n        element.style.transform = `translate(${position.x}px, ${position.y}px)`;\n        element.style.backgroundPosition =\n            enemySpriteSheet.getBackgroundPosition();\n    }\n\n    function handleDelete() {\n        deleteEnemy(element);\n        element.remove();\n    }\n\n    function toggleSelect() {\n        element.classList.toggle('selected');\n    }\n\n    return Object.freeze({\n        update,\n        draw,\n        handleDelete,\n        toggleSelect,\n        question,\n        get element() {\n            return element;\n        },\n    });\n}\n\nexport default Enemy;\n","function Timer(duration, onFinish, { autoRestart = true } = {}) {\n    let timeRemaining = duration;\n\n    function restart() {\n        timeRemaining = duration;\n    }\n\n    function handleComplete() {\n        onFinish();\n        if (autoRestart) restart();\n    }\n\n    function tick(deltaTime) {\n        timeRemaining = Math.max(0, timeRemaining - deltaTime);\n\n        if (timeRemaining <= 1) handleComplete();\n    }\n\n    // converts time in ms to mm:ss format\n    function getHumanTimeRemaining() {\n        const seconds = Math.ceil(timeRemaining / 1000) % 60;\n        const minutes = Math.floor(Math.ceil(timeRemaining / 1000) / 60);\n\n        const formatedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n        const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n\n        return `${formattedMinutes}:${formatedSeconds}`;\n    }\n\n    return Object.freeze({\n        tick,\n        getHumanTimeRemaining,\n    });\n}\n\nexport default Timer;\n","// \\u00D7 is the unicode symbol for multiplication and \\u00F7 for division in Javascript.\n\nconst operatorDifficulty = {\n    easy: ['+', '-'],\n    medium: ['+', '-', '\\u00D7'],\n    hard: ['+', '-', '\\u00D7'],\n    insane: ['+', '-', '\\u00D7', '\\u00F7'],\n};\n\nconst wholeNumberGenerator = (number) => Math.floor(Math.random() * number);\n\n// Change difficulty here as this is the factor of multiplication that determines range of numbers.\nconst generateDifficulty = (difficulty) => {\n    switch (difficulty) {\n        case 'easy':\n            return 5;\n        case 'medium':\n            return 10;\n        case 'hard':\n            return 30;\n        case 'insane':\n            return 100;\n        default:\n            return 5;\n    }\n};\n\nconst indexOperatorGenerator = (difficulty) =>\n    wholeNumberGenerator(operatorDifficulty[difficulty].length);\n\nconst operatorSelector = (difficulty) =>\n    operatorDifficulty[difficulty][indexOperatorGenerator(difficulty)];\n\nconst questionNumberGenerator = (difficulty) =>\n    wholeNumberGenerator(generateDifficulty(difficulty)) + 1;\n\nconst answerQuestion = (question) => {\n    const questionArr = question.split(' ');\n    const num1 = Number(questionArr[0]);\n    const operator = questionArr[1];\n    const num2 = Number(questionArr[2]);\n    let answer;\n    if (operator === '+') {\n        answer = num1 + num2;\n    } else if (operator === '-') {\n        answer = num1 - num2;\n    } else if (operator === '\\u00D7') {\n        answer = num1 * num2;\n    } else {\n        answer = num1 / num2;\n    }\n    return answer;\n};\n\nconst questionGenerator = (difficulty) => {\n    const operator = operatorSelector(difficulty);\n    let number1 = questionNumberGenerator(difficulty);\n    let number2 = questionNumberGenerator(difficulty);\n    // Functions that will determine question difficulty\n    while (operator === '\\u00F7') {\n        if (number1 % number2 !== 0) {\n            number1 = questionNumberGenerator(difficulty);\n            number2 = questionNumberGenerator(difficulty);\n        } else {\n            break;\n        }\n    }\n    while (operator === '-') {\n        if (number1 - number2 < 0) {\n            number1 = questionNumberGenerator(difficulty);\n            number2 = questionNumberGenerator(difficulty);\n        } else {\n            break;\n        }\n    }\n\n    while (operator === '\\u00D7') {\n        if (number1 * number2 > 150) {\n            number1 = questionNumberGenerator(difficulty);\n            number2 = questionNumberGenerator(difficulty);\n        } else {\n            break;\n        }\n    }\n\n    while (operator === '+') {\n        if (number1 + number2 > 150) {\n            number1 = questionNumberGenerator(difficulty);\n            number2 = questionNumberGenerator(difficulty);\n        } else {\n            break;\n        }\n    }\n\n    const questionText = `${number1} ${operator} ${number2}`;\n    const answer = answerQuestion(questionText);\n\n    return {\n        text: questionText,\n        answer,\n    };\n};\n\nexport default questionGenerator;\n","const scoreElements = document.querySelectorAll('[data-score-display]');\n\nlet score = 0;\n\nfunction draw() {\n    scoreElements.forEach((element) => {\n        const el = element;\n        el.textContent = score;\n    });\n}\n\nfunction addPoints(amount) {\n    if (amount < 0) {\n        score = Math.max(0, score + amount);\n    } else {\n        score += amount;\n    }\n    draw();\n}\n\nfunction reset() {\n    score = 0;\n    draw();\n}\n\nexport default Object.freeze({ addPoints, reset });\n","const DEFAULT_SETTINGS = {\n    SPAWN_POINTS: {\n        FIRST_LANE: { x: -100, y: 35 },\n        SECOND_LANE: { x: -100, y: 135 },\n        THIRD_LANE: { x: -100, y: 235 },\n    },\n    POINTS: {\n        CORRECT_ANSWER: 10,\n        WRONG_ANSWER: -2,\n        CASTLE_LIFE_LOST: -10,\n    },\n    enemySpeed: 30,\n    enemySpeedIncrement: 3,\n    spawnTimerMs: 2700,\n    gameTimerMs: 300000,\n    questionDifficulty: 'medium',\n    castleStartingLives: 3,\n};\n\nexport default DEFAULT_SETTINGS;\n","function hideElement(element) {\n    const el = element;\n    el.style.display = 'none';\n}\n\nfunction showElement(element, displayValue) {\n    const el = element;\n    el.style.display = displayValue;\n}\n\nexport { hideElement, showElement };\n","class Engine {\n    constructor(update, render) {\n        this.running = false;\n        this.rafID = undefined;\n\n        this.update = update;\n        this.draw = render;\n\n        this.accumulatedTime = 0;\n        this.currentTime = 0;\n        this.timeStep = 1000 / 60;\n\n        this.cycle = this.cycle.bind(this);\n    }\n\n    cycle(timeStamp) {\n        this.rafID = requestAnimationFrame(this.cycle);\n\n        this.accumulatedTime += timeStamp - this.currentTime;\n        this.currentTime = timeStamp;\n\n        let updated = false;\n\n        if (this.accumulatedTime > 60) {\n            this.accumulatedTime = this.timeStep;\n        }\n\n        while (this.accumulatedTime >= this.timeStep) {\n            this.update(this.timeStep);\n\n            updated = true;\n\n            this.accumulatedTime -= this.timeStep;\n        }\n\n        if (updated) this.draw();\n    }\n\n    start() {\n        this.running = true;\n        this.rafID = requestAnimationFrame(this.cycle);\n    }\n\n    stop() {\n        this.running = false;\n        cancelAnimationFrame(this.rafID);\n    }\n}\n\nexport default Engine;\n","import gameBoard from './gameBoard';\nimport castle from './castle';\nimport Enemy from './enemy';\nimport Timer from './timer';\nimport questionGenerator from './questionGenerator';\nimport scoreHandler from './scoreHandler';\nimport DEFAULT_SETTINGS from './defaultSettings';\nimport { hideElement, showElement } from './domUtils';\nimport Engine from './engine';\n\nconst GAMESTATES = {\n    MENU: 0,\n    RUNNING: 1,\n    GAMEOVER: 2,\n    PAUSED: 3,\n};\n\nconst startPage = document.querySelector('#start-page');\nconst gamePage = document.querySelector('#game-page');\nconst gameOverPage = document.querySelector('#game-over-page');\nconst difficultySelectPage = document.querySelector('#difficulty-select-page');\nconst answerForm = document.querySelector('.answer-form');\nconst answerInput = document.querySelector('#answer-input');\nconst gameTimer = document.querySelector('#game-timer');\nconst wrongAnswersEl = document.querySelector('#game-over-wrong-answers');\nconst startButton = document.querySelector('.start-button');\nconst restartButton = document.querySelector('#restart-button');\nconst pauseButton = document.querySelector('.pause-button');\nconst difficultyButtons = document.querySelectorAll('[data-difficulty');\nconst homeButton = document.querySelector('#home-button');\n\nconst settings = { ...DEFAULT_SETTINGS };\nconst timers = {};\nconst fieldWidth = gameBoard.width - (castle.width - 70);\nconst engine = new Engine(update, draw);\n\nlet gameState = GAMESTATES.MENU;\nlet selectedEnemy = null;\nlet wrongAnswers = 0;\nlet enemies = [];\n\n// PRIVATE FUNCTIONS\n\nfunction spawnEnemy() {\n    const enemy = Enemy({\n        position: getRandomSpawnPoint(),\n        speed: settings.enemySpeed,\n        question: questionGenerator(settings.questionDifficulty),\n        fieldWidth,\n        handleSelectEnemy,\n        damageCastle,\n        deleteEnemy,\n    });\n    settings.enemySpeed += settings.enemySpeedIncrement;\n    gameBoard.element.appendChild(enemy.element);\n    enemies.push(enemy);\n}\n\nfunction getRandomSpawnPoint() {\n    // randomly choose an object keys in the POSITION object\n    const keys = Object.keys(settings.SPAWN_POINTS);\n    return settings.SPAWN_POINTS[keys[Math.floor(Math.random() * keys.length)]];\n}\n\nfunction deleteEnemy(element) {\n    enemies = enemies.filter((enemy) => {\n        if (enemy.element !== element) return true;\n\n        if (selectedEnemy === enemy) {\n            selectedEnemy = null;\n        }\n\n        return false;\n    });\n}\n\nfunction initialiseTimers() {\n    // spawn enemy every 2.5 seconds\n    timers.spawnTimer = Timer(settings.spawnTimerMs, spawnEnemy);\n\n    // end game after 300000 ms (5 minutes)\n    timers.gameTimer = Timer(settings.gameTimerMs, gameOver, {\n        autoRestart: false,\n    });\n}\n\nfunction handleAnswerSubmit(event) {\n    event.preventDefault();\n\n    if (!selectedEnemy || answerInput.value.trim() === '') return;\n\n    const correctAnswer = selectedEnemy.question.answer.toString();\n    const userAnswer = answerInput.value;\n\n    if (userAnswer === correctAnswer) {\n        selectedEnemy.handleDelete();\n        selectedEnemy = null;\n        scoreHandler.addPoints(settings.POINTS.CORRECT_ANSWER);\n    } else {\n        scoreHandler.addPoints(settings.POINTS.WRONG_ANSWER);\n        wrongAnswers += 1;\n    }\n\n    answerInput.value = '';\n}\n\nfunction handleSelectEnemy(event) {\n    answerInput.focus();\n\n    const clickedEnemy = enemies.find(\n        (enemy) => enemy.element === event.currentTarget\n    );\n\n    if (clickedEnemy === selectedEnemy) return;\n\n    if (selectedEnemy) selectedEnemy.toggleSelect();\n\n    clickedEnemy.toggleSelect();\n\n    selectedEnemy = clickedEnemy;\n}\n\nfunction damageCastle(amount) {\n    scoreHandler.addPoints(settings.POINTS.CASTLE_LIFE_LOST);\n    castle.damage(amount, gameOver);\n}\n\nfunction gameOver() {\n    gameState = GAMESTATES.GAMEOVER;\n    wrongAnswersEl.textContent = wrongAnswers;\n    hideElement(gamePage);\n    showElement(gameOverPage, 'flex');\n}\n\nfunction reset() {\n    settings.enemySpeed = DEFAULT_SETTINGS.enemySpeed;\n    initialiseTimers();\n    scoreHandler.reset();\n    wrongAnswers = 0;\n    answerInput.value = '';\n    castle.setup(settings.castleStartingLives);\n    enemies.forEach((enemy) => enemy.handleDelete());\n}\n\nfunction start(selectedDifficulty) {\n    reset();\n    settings.questionDifficulty = selectedDifficulty;\n    gameState = GAMESTATES.RUNNING;\n    engine.start();\n}\n\nfunction restart() {\n    reset();\n    hideElement(gameOverPage);\n    showElement(gamePage, 'flex');\n    gameState = GAMESTATES.RUNNING;\n}\n\nfunction pause() {\n    gameState = GAMESTATES.PAUSED;\n    answerInput.disabled = true;\n    enemies.forEach((enemy) => enemy.element.classList.add('not-clickable'));\n}\n\nfunction unPause() {\n    gameState = GAMESTATES.RUNNING;\n    answerInput.disabled = false;\n    enemies.forEach((enemy) => enemy.element.classList.remove('not-clickable'));\n}\n\nfunction update(deltaTime) {\n    if (gameState !== GAMESTATES.RUNNING) return;\n\n    Object.keys(timers).forEach((key) => timers[key].tick(deltaTime));\n\n    enemies.forEach((enemy) => enemy.update(deltaTime));\n}\n\nfunction draw() {\n    gameTimer.textContent = timers.gameTimer.getHumanTimeRemaining();\n\n    enemies.forEach((enemy) => enemy.draw());\n}\n\nfunction handlePause() {\n    const pauseButtonText = ['Continue', 'Pause'];\n    const [first, second] = pauseButtonText;\n    if (gameState === GAMESTATES.RUNNING) {\n        pause();\n        engine.stop();\n        pauseButton.textContent = first;\n    } else if (gameState === GAMESTATES.PAUSED) {\n        engine.start();\n        unPause();\n        pauseButton.textContent = second;\n    }\n}\n\nfunction handleStartButtonClick() {\n    hideElement(startPage);\n    showElement(difficultySelectPage, 'flex');\n}\n\nfunction handleDifficultySelect(event) {\n    const selectedDifficulty = event.target.dataset.difficulty;\n    hideElement(difficultySelectPage);\n    showElement(gamePage, 'flex');\n    start(selectedDifficulty);\n}\n\nfunction handleHomeButtonClick() {\n    if (gameState === GAMESTATES.PAUSED) handlePause();\n    engine.stop();\n    gameState = GAMESTATES.MENU;\n    hideElement(gamePage);\n    showElement(difficultySelectPage, 'flex');\n}\n\n// PUBLIC FUNCTIONS\n\nfunction init() {\n    startButton.addEventListener('click', handleStartButtonClick);\n    restartButton.addEventListener('click', restart);\n    pauseButton.addEventListener('click', handlePause);\n    answerForm.addEventListener('submit', handleAnswerSubmit);\n    difficultyButtons.forEach((button) =>\n        button.addEventListener('click', handleDifficultySelect)\n    );\n    homeButton.addEventListener('click', handleHomeButtonClick);\n}\n\nexport default Object.freeze({\n    init,\n});\n","import './styles/styles.css';\nimport game from './modules/game';\n\ngame.init();\n"],"sourceRoot":""}